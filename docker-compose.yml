services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    # hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka
    # hostname: broker
    container_name: broker
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      # KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'

      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://broker:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT

      # KAFKA_CREATE_TOPICS: "purchases:1:1"

      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  api:
    image: kafka_api
    container_name: api
    build: ./API Service
      # context: .
      # dockerfile: ./API Service/Dockerfile
    env_file:
      - .env
    depends_on:
      - broker
    ports:
      - "3000:3000"

  data_service:
    image: data_service
    # hostname: data_service
    container_name: data_service
    build: ./Data Service
      # context: .
      # dockerfile: ./Data Service/Dockerfile
    env_file:
      - .env
    depends_on:
      - broker
      - db
    ports:
      - "4000:4000"
    expose:
      - "4000"

  db:
    image: postgres
    container_name: db
    env_file:
      - .env
    ports:
      - "5432:5432"